"""update sold vehicle, including pickup vehicle

Revision ID: 0f9fd4b56437
Revises: 65d2d8f10398
Create Date: 2024-08-12 02:00:05.100826

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0f9fd4b56437'
down_revision: Union[str, None] = '65d2d8f10398'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    status_enum = postgresql.ENUM('draft', 'sold', 'awaiting_pickup', name='status_enum')
    status_enum.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('vehicle_sold', 'status',
               existing_type=postgresql.ENUM('draft', 'sold', 'awaiting_pickup', name='status_enum'),
               type_=sa.Enum('draft', 'sold', 'awaiting_pickup', name='status_enum'),
               existing_nullable=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('vehicle_sold', 'status',
               existing_type=sa.Enum('draft', 'sold', 'awaiting_pickup', name='status_enum'),
               type_=postgresql.ENUM('draft', 'sold', name='status_enum'),
               existing_nullable=False)
    # ### end Alembic commands ###
    status_enum = postgresql.ENUM('draft', 'sold', 'awaiting_pickup', name='status_enum')
    status_enum.drop(op.get_bind())
